const AdvancedTable={delimiters:["{@","@}"],template:'\n\t<div class="advanced-table" style="box-sizing: border-box">\n\t\t<table style="width: 100%; border-collapse: collapse">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th v-for="field in fields" v-bind:style="{width: field.stretch ? \'100%\' : field.width ? field.width : \'\'}" style="white-space: nowrap; textAlign: center; vertical-align: top">\n\t\t\t\t\t\t{@ field.title @}\n\t\t\t\t\t\t<span class="sort-icon" \n\t\t\t\t\t\t\t  v-if="field.sortable" \n\t\t\t\t\t\t\t  v-on:click="applySort(field.name)"\n\t\t\t\t\t\t\t  style="margin-left: 0.1em; cursor: pointer"\n\t\t\t\t\t\t\t  title="Rekordok rendezése">\n\t\t\t\t\t\t\t<i v-if="field.name == sort.by && sort.direction == 0" class="fa fa-sort-down"></i>\n\t\t\t\t\t\t\t<i v-else-if="field.name == sort.by && sort.direction == 1" class="fa fa-sort-up"></i>\n\t\t\t\t\t\t\t<i v-else class="fa fa-sort"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<template v-for="record in selectedRecords">\n\t\t\t\t<tr \n\t\t\t\t\tv-bind:class="selected != null ? (selected.id == record.id ? \'selected\' : \'\') : \'\'"\n\t\t\t\t\tv-on:click="selectRecord(record.id)">\n\t\t\t\t\t<td v-for="field in fields" v-bind:style="{textAlign: field.alignment}" v-html="record[field.name]" style="vertical-align: top"></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr v-if="recordMenu != null && selected != null && selected.id == record.id" class="record-menu-container">\n\t\t\t\t\t<td :colspan="fields.length">\n\t\t\t\t\t\t<div style="width: 100%; text-align: center; padding: 0.5em 0 0.5em 0" class="record-menu">\n\t\t\t\t\t\t\t<a  v-for="item in recordMenu"\n\t\t\t\t\t\t\t\tv-on:click="callMenuAction(item.action, record)"\n\t\t\t\t\t\t\t\t:title="item.title"\n\t\t\t\t\t\t\t\tstyle="cursor: pointer; margin: 0 0.4em 0 0.4em">\n\t\t\t\t\t\t\t\t<i class="fa" \n\t\t\t\t\t\t\t\t   :class="item.icon != null ? item.icon : \'\'"\n\t\t\t\t\t\t\t\t   :style="{color: item.color != null ? item.color : \'\'}"></i>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t</template>\n\t\t\t</tbody>\n\t\t</table>\n\t\t<div v-if="numPages >= 2" class="page-selector" style="display: flex; flex-flow: row nowrap; justify-content: center">\n\t\t\t<a @click="changePage(\'first\')" style="margin-right: 0.5em; cursor: pointer" title="Első oldal"><i class="fa fa-angle-double-left"></i></a> \t\t\n\t\t\t<a @click="changePage(\'dec\')" style="margin-right: 0.5em; cursor: pointer" title="Előző oldal"><i class="fa fa-angle-left"></i></a> \n\t\t\t<span class="page-display">{@ (currentPage + 1) + "/" + numPages @}</span>\n\t\t\t<a @click="changePage(\'inc\')" style="margin-left: 0.5em; cursor: pointer" title="Következő oldal"><i class="fa fa-angle-right"></i></a> \n\t\t\t<a @click="changePage(\'last\')" style="margin-left: 0.5em; cursor: pointer" title="Utolsó oldal"><i class="fa fa-angle-double-right"></i></a>\n\t\t</div>\n\t</div>\n\t',data:()=>({currentPage:0,currentCount:25,selected:null,sort:{by:null,direction:0}}),props:{fields:{type:Array,required:!0},records:{type:Array,required:!0},page:{type:Number,default:0},recordsPerPage:{type:Number,default:25},recordMenu:{type:Array,default:null},actionRouter:{type:Object,default:null}},created(){this.currentPage=this.page,this.currentCount=this.recordsPerPage},beforeUpdate(){this.currentPage>this.numPages-1&&(this.currentPage=Math.max(0,this.numPages-1))},watch:{records(){this.resetSelection()}},methods:{changePage:function(t){switch(t){case"inc":this.currentPage=Math.min(this.currentPage+1,this.numPages-1);break;case"dec":this.currentPage=Math.max(0,this.currentPage-1);break;case"first":this.currentPage=0;break;case"last":this.currentPage=this.numPages-1}},callMenuAction(t,e){this.actionRouter&&this.actionRouter.call(t,e)},selectRecord(t){null!=this.selected&&t==this.selected.id?this.selected=null:this.selected=this.records.find(e=>e.id===t),this.$emit("selectionChanged",this.selected)},resetSelection(){this.selected=null,this.$emit("selectionChanged",this.selected)},applySort(t){null==this.sort.by?(this.sort.by=t,this.sort.direction=0):this.sort.by==t?(this.sort.direction=(this.sort.direction+1)%3,2==this.sort.direction&&(this.sort.by=null,this.sort.direction=0)):(this.sort.by=t,this.sort.direction=0)}},emits:["selectionChanged"],computed:{selectedRecords(){var t=Array.from(this.records);null!=this.sort.by&&(0==this.sort.direction&&t.sort((t,e)=>t[this.sort.by]>e[this.sort.by]?1:-1),1==this.sort.direction&&t.sort((t,e)=>t[this.sort.by]<e[this.sort.by]?1:-1));var e=this.currentCount*this.currentPage;return t.slice(e,e+this.currentCount)},numPages(){return Math.ceil(this.records.length/this.currentCount)}}};